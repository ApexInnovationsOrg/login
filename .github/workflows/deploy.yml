name: Deploy
on:
  push:
    branches:
      - master

concurrency:
  group: prod
  cancel-in-progress: true

jobs:
  docker-php:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Composer
      run: composer update --working-dir ${{ github.workspace }}/
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: login to ECR
      run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 685265542736.dkr.ecr.us-east-1.amazonaws.com
    - name: dockerignore
      run: cp .dockerignore-php .dockerignore
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./.Dockerfile-php
        push: true
        tags: 685265542736.dkr.ecr.us-east-1.amazonaws.com/apexinnovations-php-fpm-login
    - name: dockerignore
      run: cp .dockerignore-nginx .dockerignore
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./.Dockerfile-nginx
        push: true
        tags: 685265542736.dkr.ecr.us-east-1.amazonaws.com/apexinnovations-nginx-login
    - name: update login service
      run: aws ecs update-service --cluster ApexInnovations --service login --force-new-deployment
    
